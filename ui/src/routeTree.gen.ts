/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DraftRouteImport } from './routes/draft'
import { Route as IndexRouteImport } from './routes/index'
import { Route as JobsJobIdRouteImport } from './routes/jobs/$jobId'

const DraftRoute = DraftRouteImport.update({
  id: '/draft',
  path: '/draft',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const JobsJobIdRoute = JobsJobIdRouteImport.update({
  id: '/jobs/$jobId',
  path: '/jobs/$jobId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/draft': typeof DraftRoute
  '/jobs/$jobId': typeof JobsJobIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/draft': typeof DraftRoute
  '/jobs/$jobId': typeof JobsJobIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/draft': typeof DraftRoute
  '/jobs/$jobId': typeof JobsJobIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/draft' | '/jobs/$jobId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/draft' | '/jobs/$jobId'
  id: '__root__' | '/' | '/draft' | '/jobs/$jobId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DraftRoute: typeof DraftRoute
  JobsJobIdRoute: typeof JobsJobIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/draft': {
      id: '/draft'
      path: '/draft'
      fullPath: '/draft'
      preLoaderRoute: typeof DraftRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jobs/$jobId': {
      id: '/jobs/$jobId'
      path: '/jobs/$jobId'
      fullPath: '/jobs/$jobId'
      preLoaderRoute: typeof JobsJobIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DraftRoute: DraftRoute,
  JobsJobIdRoute: JobsJobIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
